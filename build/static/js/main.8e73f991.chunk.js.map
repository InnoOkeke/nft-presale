{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","assets/images/1.gif","assets/images/Icon.png","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledImg","img","LogoImg","App","useDispatch","useSelector","useState","feedback","setFeedback","claimingNft","setClaimingNft","useEffect","style","backgroundColor","alt","src","icon","textAlign","onClick","e","preventDefault","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","SmartContract","on","location","reload","minHeight","fontSize","fontWeight","flexWrap","overflow","maxHeight","i1","totalSupply","Number","target","href","disabled","_amount","mint","send","gasLimit","to","from","value","utils","toWei","toString","once","err","then","receipt","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e73f991.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  name: \"\",\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...initialState,\n        loading: false,\n        name: action.payload.name,\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.smartContract.methods.name()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          name,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport SmartContract from \"../../contracts/ACC.json\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        // const NetworkData = await SmartContract.networks[networkId];\n        if (networkId == 4) {\n          const SmartContractObj = new Web3EthContract(\n            SmartContract,\n            \"0x1a94E0d181044aea45024F1a7A5adDf1e14704C0\"\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Ethereum Testnet.\"));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--dark-grey);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--dark-grey);\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--dark-grey);\n  font-size: 14px;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--dark-grey);\n  font-size: 12px;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/1.d5ba6ada.gif\";","export default __webpack_public_path__ + \"static/media/Icon.d7d94118.png\";","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport i1 from \"./assets/images/1.gif\";\nimport icon from \"./assets/images/Icon.png\";\n\nexport const StyledButton = styled.button`\n  padding: 8px;\n  border-radius: 50px;\n  border: none;\n  background-color: #1e9abd;\n  padding: 10px;\n  font-weight: bold;\n  color: #fff;\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(0, 0, 0, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(0, 0, 0, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(0, 0, 0, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  width: 100px;\n  height: 100px;\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n  height: 200px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(\"Maybe it's your lucky day.\");\n  const [claimingNft, setClaimingNft] = useState(false);\n\n  const claimNFTs = (_amount) => {\n    if (_amount <= 0) {\n      return;\n    }\n    setFeedback(\"Minting your Artifacts...\");\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(blockchain.account, _amount)\n      .send({\n        gasLimit: \"285000\",\n        to: \"0x1a94E0d181044aea45024F1a7A5adDf1e14704C0\",\n        from: blockchain.account,\n        value: blockchain.web3.utils.toWei((0.08 * _amount).toString(), \"ether\"),\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          \"WOW, you now own a Artifacts. go visit Opensea.io to view it.\"\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  useEffect(() => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  }, [blockchain.smartContract, dispatch]);\n\n  return (\n    <s.Screen style={{ backgroundColor: \"var(--white)\" }}>\n      {blockchain.account === \"\" || blockchain.smartContract === null ? (\n        <s.Container flex={1} ai={\"center\"} jc={\"center\"}>\n          <LogoImg alt={\"logo\"} src={icon} />\n          <s.SpacerSmall />\n          <s.TextTitle style={{ textAlign: \"center\" }}>\n            Mint Artifacts\n          </s.TextTitle>\n          <s.SpacerSmall />\n          <s.TextDescription style={{ textAlign: \"center\" }}>\n            Connect to the Ethereum Rinkeby network\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <StyledButton\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch(connect());\n            }}\n          >\n            CONNECT\n          </StyledButton>\n          <s.SpacerSmall />\n          {blockchain.errorMsg !== \"\" ? (\n            <s.TextDescription style={{ textAlign: \"center\" }}>\n              {blockchain.errorMsg}\n            </s.TextDescription>\n          ) : null}\n        </s.Container>\n      ) : (\n        <s.Container flex={1}>\n          <s.Container style={{ minHeight: 80 }} jc={\"center\"} ai={\"center\"}>\n            <s.TextTitle\n              style={{ textAlign: \"center\", fontSize: 28, fontWeight: \"bold\" }}\n            >\n              Mint Artifacts\n            </s.TextTitle>\n          </s.Container>\n          <s.Container\n            ai={\"center\"}\n            jc={\"center\"}\n            fd={\"row\"}\n            style={{\n              flexWrap: \"wrap\",\n              overflow: \"hidden\",\n              maxHeight: \"200px\",\n              minHeight: \"200px\",\n            }}\n          >\n            <StyledImg alt={\"example\"} src={i1} />\n          </s.Container>\n          <s.SpacerSmall />\n          <s.Container flex={1} ai={\"center\"} jc={\"center\"}>\n            <s.TextTitle\n              style={{ textAlign: \"center\", fontSize: 35, fontWeight: \"bold\" }}\n            >\n              {data.totalSupply}/25\n            </s.TextTitle>\n            <s.SpacerMedium />\n\n            {Number(data.totalSupply) == 25 ? (\n              <>\n                <s.TextTitle style={{ textAlign: \"center\" }}>\n                  The sale has ended.\n                </s.TextTitle>\n                <s.SpacerSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                  You can still find Artifacts on{\" \"}\n                  <a\n                    target={\"_blank\"}\n                    href={\"https://testnets.opensea.io/collection/artifact-keychain-v3\"}\n                  >\n                    Opensea.io\n                  </a>\n                </s.TextDescription>\n              </>\n            ) : (\n              <>\n                <s.TextTitle style={{ textAlign: \"center\" }}>\n                  1 Artifacts costs 0.08 ETH.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                  Excluding gas fee.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                  {feedback}\n                </s.TextDescription>\n                <s.SpacerMedium />\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  <StyledButton\n                    disabled={claimingNft ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      claimNFTs(1);\n                    }}\n                  >\n                    {claimingNft ? \"BUSY\" : \"BUY 1\"}\n                  </StyledButton>\n                </s.Container>\n                <s.SpacerLarge />\n                <s.SpacerLarge />\n                <s.Container\n                  jc={\"center\"}\n                  ai={\"center\"}\n                  style={{ width: \"70%\" }}\n                >\n                  <s.TextDescription\n                    style={{ textAlign: \"center\", fontSize: 9 }}\n                  >\n                    Please make sure you are connected to the right network\n                    (Ethereum Testnet) and the correct address. Please note:\n                    Once you make the purchase, you cannot undo this action.\n                  </s.TextDescription>\n                  <s.SpacerSmall />\n                  <s.TextDescription\n                    style={{ textAlign: \"center\", fontSize: 9 }}\n                  >\n                    We have set the gas limit to 285000 for the contract to\n                    successfully mint your NFT. We recommend that you don't\n                    change the gas limit.\n                  </s.TextDescription>\n                </s.Container>\n                <s.SpacerSmall />\n              </>\n            )}\n          </s.Container>\n        </s.Container>\n      )}\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport Dapp from \"./App\";\nimport \"./styles/reset.css\";\nimport \"./styles/theme.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    <Dapp />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}